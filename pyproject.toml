[project]
name = "inky-mbta-tracker"
version = "0.1.0"
description = "Redis backed application to track MBTA vehicle schedules & vehicles postitions among other data"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "aiodns==3.4.0",
    "aiohappyeyeballs==2.6.1",
    "aiohttp==3.12.11",
    "aiosignal==1.3.2",
    "aiosseclient==0.1.8",
    "annotated-types==0.7.0",
    "anyio==4.9.0",
    "attrs==25.3.0",
    "boto3==1.38.18",
    "botocore==1.38.18",
    "brotli==1.1.0",
    "certifi==2025.4.26",
    "cffi==1.17.1",
    "charset-normalizer==3.4.2",
    "cloudpickle==3.1.1",
    "dictdiffer==0.9.0",
    "frozenlist==1.6.2",
    "geojson==3.1.0",
    "geopandas==1.0.1",
    "h11==0.16.0",
    "httpcore==1.0.9",
    "humanize==4.12.3",
    "idna==3.10",
    "jinja2==3.1.6",
    "jmespath==1.0.1",
    "markdown-it-py==3.0.0",
    "markupsafe==3.0.2",
    "mdurl==0.1.2",
    "multidict==6.4.4",
    "mypy>=1.15.0",
    "numpy==1.26.4",
    "packaging==25.0",
    "paho-mqtt==2.1.0",
    "pandas==2.3.0",
    "polyline==2.0.2",
    "prettytable==3.16.0",
    "prometheus-client==0.22.1",
    "propcache==0.3.1",
    "psutil==7.0.0",
    "pycares==4.8.0",
    "pycparser==2.22",
    "pydantic==2.11.3",
    "pydantic-core==2.33.1",
    "pygments==2.19.1",
    "pyogrio==0.11.0",
    "pyproj==3.7.1",
    "python-dateutil==2.9.0.post0",
    "python-dotenv==1.1.0",
    "pytz==2025.2",
    "redis==6.2.0",
    "ruff==0.11.12",
    "s3transfer==0.12.0",
    "scipy==1.14.1",
    "shapely==2.0.6",
    "six==1.17.0",
    "smmap==5.0.2",
    "sniffio==1.3.1",
    "sortedcontainers==2.4.0",
    "tenacity==9.1.2",
    "turfpy==0.0.8",
    "typing-extensions==4.14.0",
    "tzdata==2025.2",
    "urllib3==2.4.0",
    "wcwidth==0.2.13",
    "wheel==0.46.1",
    "yappi==1.6.10",
    "yarl==1.20.0",
]

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 88
indent-width = 4

# Assume Python 3.8
target-version = "py38"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F", "I", ]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

[tool.mypy]
files = ["inky-mbta-tracker"]
plugins = ["pydantic.mypy"]
check_untyped_defs = true
warn_unused_ignores = true
show_error_codes = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
ignore_missing_imports = true
