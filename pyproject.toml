[project]
name = "inky-mbta-tracker"
version = "1.2.0"
description = "Redis backed application to track MBTA vehicle schedules & vehicles postitions among other data"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "aiodns==3.5.0",
    "aiohappyeyeballs==2.6.1",
    "aiohttp==3.13.1",
    "aiosignal==1.4.0",
    "aiosseclient==0.1.8",
    "annotated-types==0.7.0",
    "anyio==4.11.0",
    "async-lru>=2.0.5",
    "attrs==25.4.0",
    "brotli==1.1.0",
    "certifi==2025.10.5",
    "cffi==2.0.0",
    "charset-normalizer==3.4.4",
    "click>=8.2.1",
    "fastapi==0.120.0",
    "frozenlist==1.8.0",
    "geojson==3.1.0",
    "h11==0.16.0",
    "hiredis>=2.3.2",
    "httpcore==1.0.9",
    "humanize==4.14.0",
    "idna==3.11",
    "markupsafe==3.0.3",
    "mdurl==0.1.2",
    "metaphone>=0.6",
    "multidict==6.7.0",
    "packaging==25.0",
    "paho-mqtt==2.1.0",
    "polyline==2.0.3",
    "prometheus-client==0.23.1",
    "prometheus-fastapi-instrumentator>=7.1.0",
    "propcache==0.4.1",
    "pycares==4.11.0",
    "pycparser==2.23",
    "pydantic>=2.11.7",
    "pydantic-core>=2.33.2",
    "python-dotenv==1.2.0",
    "redis==7.0.0",
    "redis-lock-py>=1.1.1",
    "slowapi>=0.1.9",
    "sniffio==1.3.1",
    "tenacity==9.1.2",
    "textdistance>=4.6.3",
    "turfpy==0.0.8",
    "typing-extensions==4.15.0",
    "urllib3==2.5.0",
    "uvicorn==0.38.0",
    "uvloop>=0.21.0",
    "uvloop>=0.20.0; sys_platform != 'win32'",
    "yarl==1.22.0",
    "llm>=0.27.1",
    "llm-ollama>=0.13.0",
    "keras>=3.11.3",
    "scipy>=1.14.1",
    "huggingface-hub>=0.34.4",
    "jax>=0.5.3",
    "tqdm>=4.67.1",
    "uvicorn-worker>=0.4.0",
    "gunicorn>=23.0.0",
    "deepdiff[optimize]>=8.6.1",
    "shapely>=2.0.6",
]

[dependency-groups]
dev = [
    "basedpyright>=1.31.4",
    "pytest>=8.4.1",
    "pytest-asyncio>=1.0.0",
    "ruff==0.14.1",
]

[project.scripts]
inky-mbta-tracker = "main:run_main"
api-server = "api_server:run_main"

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 88
indent-width = 4

target-version = "py313"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F", "I", ]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

[tool.basedpyright]
include = ["inky-mbta-tracker"]
pythonVersion = "3.13"

# Aim to mirror prior mypy settings
# - disallow_untyped_defs / disallow_incomplete_defs
typeCheckingMode = "basic"
analyzeUnannotatedFunctions = true
reportUnknownParameterType = "error"


# - ignore_missing_imports
reportMissingImports = "none"
reportMissingTypeStubs = "none"

exclude = [
    ".venv",
    ".mypy_cache",
    ".ruff_cache",
    "dist",
    "build",
]

[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["inky-mbta-tracker"]
